{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\"; // Reducers\n\nimport { cartReducer } from \"./reducers/cartReducers\";\nimport { getProductsReducer, getProductDetailsReducer } from \"./reducers/productReducers\";\nconst reducer = combineReducers({\n  cart: cartReducer // getProducts: getProductsReducer,\n  // getProductDetails: getProductDetailsReducer,\n\n});\nconst middleware = [thunk];\nconst cartItemsInLocalStorage = localStorage.getItem(\"cart\") ? JSON.parse(localStorage.getItem(\"cart\")) : [];\nconst INITIAL_STATE = {\n  cart: {\n    cartItems: cartItemsInLocalStorage\n  }\n};\nconst store = createStore(reducer, INITIAL_STATE, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["F:/blisscake/blisscookies/src/markup/Pages/redux/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","cartReducer","getProductsReducer","getProductDetailsReducer","reducer","cart","middleware","cartItemsInLocalStorage","localStorage","getItem","JSON","parse","INITIAL_STATE","cartItems","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC,C,CAEA;;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SACEC,kBADF,EAEEC,wBAFF,QAGO,4BAHP;AAKA,MAAMC,OAAO,GAAGP,eAAe,CAAC;AAC9BQ,EAAAA,IAAI,EAAEJ,WADwB,CAE/B;AACA;;AAH+B,CAAD,CAA/B;AAMA,MAAMK,UAAU,GAAG,CAACP,KAAD,CAAnB;AAEA,MAAMQ,uBAAuB,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,IAC5BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAD4B,GAE5B,EAFJ;AAIA,MAAMG,aAAa,GAAG;AACpBP,EAAAA,IAAI,EAAE;AACJQ,IAAAA,SAAS,EAAEN;AADP;AADc,CAAtB;AAMA,MAAMO,KAAK,GAAGlB,WAAW,CACvBQ,OADuB,EAEvBQ,aAFuB,EAGvBZ,mBAAmB,CAACF,eAAe,CAAC,GAAGQ,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeQ,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\n// Reducers\r\nimport { cartReducer } from \"./reducers/cartReducers\";\r\nimport {\r\n  getProductsReducer,\r\n  getProductDetailsReducer,\r\n} from \"./reducers/productReducers\";\r\n\r\nconst reducer = combineReducers({\r\n  cart: cartReducer,\r\n // getProducts: getProductsReducer,\r\n // getProductDetails: getProductDetailsReducer,\r\n});\r\n\r\nconst middleware = [thunk];\r\n\r\nconst cartItemsInLocalStorage = localStorage.getItem(\"cart\")\r\n  ? JSON.parse(localStorage.getItem(\"cart\"))\r\n  : [];\r\n\r\nconst INITIAL_STATE = {\r\n  cart: {\r\n    cartItems: cartItemsInLocalStorage,\r\n  },\r\n};\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  INITIAL_STATE,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}