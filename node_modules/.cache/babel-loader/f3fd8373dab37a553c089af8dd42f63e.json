{"ast":null,"code":"import { combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { cartReducer } from './reducers/cartReducers';\nimport { getProductDetailsReducer, getProductsReducer } from './reducers/productReducer';\nimport { configureStore } from '@reduxjs/toolkit';\nconst reducer = combineReducers({\n  cart: cartReducer,\n  getProducts: getProductsReducer,\n  getProductsDetails: getProductDetailsReducer\n});\nconst middleware = {\n  thunk\n};\nconst store = configureStore(reducer, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["F:/blisscake/blisscookies/src/markup/Pages/redux/store.js"],"names":["combineReducers","applyMiddleware","thunk","composeWithDevTools","cartReducer","getProductDetailsReducer","getProductsReducer","configureStore","reducer","cart","getProducts","getProductsDetails","middleware","store"],"mappings":"AAAA,SAAUA,eAAV,EAA2BC,eAA3B,QAAmD,OAAnD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,wBAAT,EAAmCC,kBAAnC,QAA6D,2BAA7D;AACA,SAASC,cAAT,QAA+B,kBAA/B;AAEA,MAAMC,OAAO,GAAGR,eAAe,CAAC;AAC5BS,EAAAA,IAAI,EAAEL,WADsB;AAE5BM,EAAAA,WAAW,EAAEJ,kBAFe;AAG5BK,EAAAA,kBAAkB,EAAEN;AAHQ,CAAD,CAA/B;AAQA,MAAMO,UAAU,GAAG;AAACV,EAAAA;AAAD,CAAnB;AAEA,MAAMW,KAAK,GAAGN,cAAc,CACxBC,OADwB,EAExBL,mBAAmB,CAACF,eAAe,CAAC,GAAGW,UAAJ,CAAhB,CAFK,CAA5B;AAKA,eAAeC,KAAf","sourcesContent":["import {  combineReducers, applyMiddleware, } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { cartReducer } from './reducers/cartReducers';\r\nimport { getProductDetailsReducer, getProductsReducer } from './reducers/productReducer';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\n\r\nconst reducer = combineReducers({\r\n    cart: cartReducer,\r\n    getProducts: getProductsReducer,\r\n    getProductsDetails: getProductDetailsReducer,\r\n\r\n\r\n});\r\n\r\nconst middleware = {thunk};\r\n\r\nconst store = configureStore(\r\n    reducer,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}