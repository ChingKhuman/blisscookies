{"ast":null,"code":"import * as actionTypes from '../constants/cartConstants';\nexport const cartReducer = (state = {\n  cartItems: []\n}, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_TO_CART:\n      const item = action.payload;\n      const existItem = state.cartItems.find(x => x.product === item.product);\n\n      if (existItem) {\n        return { ...state,\n          cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n\n    case actionTypes.REMOVE_FROM_CART:\n      return { ...state,\n        cartItems: state.cartItems.filter(x => x.product !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["F:/blisscake/blisscookies/src/markup/Pages/redux/reducers/cartReducers.js"],"names":["actionTypes","cartReducer","state","cartItems","action","type","ADD_TO_CART","item","payload","existItem","find","x","product","map","REMOVE_FROM_CART","filter"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,4BAA7B;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG;AAAEC,EAAAA,SAAS,EAAE;AAAb,CAAT,EAA4BC,MAA5B,KAAuC;AAClE,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKL,WAAW,CAACM,WAAjB;AACI,YAAMC,IAAI,GAAGH,MAAM,CAACI,OAApB;AAEA,YAAMC,SAAS,GAAGP,KAAK,CAACC,SAAN,CAAgBO,IAAhB,CAAsBC,CAAD,IAAMA,CAAC,CAACC,OAAF,KAAaL,IAAI,CAACK,OAA7C,CAAlB;;AACA,UAAGH,SAAH,EAAc;AACV,eAAO,EACH,GAAGP,KADA;AAEHC,UAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBU,GAAhB,CAAqBF,CAAD,IAAMA,CAAC,CAACC,OAAF,KAAcH,SAAS,CAACG,OAAxB,GAAkCL,IAAlC,GAAuCI,CAAjE;AAFR,SAAP;AAIH,OALD,MAKO;AACH,eAAO,EACH,GAAGT,KADA;AAEHC,UAAAA,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBI,IAArB;AAFR,SAAP;AAIH;;AACD,SAAKP,WAAW,CAACc,gBAAjB;AACI,aAAO,EACH,GAAGZ,KADA;AAEHC,QAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBY,MAAhB,CAAwBJ,CAAD,IAAMA,CAAC,CAACC,OAAF,KAAcR,MAAM,CAACI,OAAlD;AAFR,OAAP;;AAIJ;AACI,aAAON,KAAP;AAtBZ;AAwBC,CAzBM","sourcesContent":["import * as actionTypes from '../constants/cartConstants';\r\n\r\nexport const cartReducer = (state = { cartItems: [] }, action) => {\r\nswitch(action.type) {\r\n    case actionTypes.ADD_TO_CART:\r\n        const item = action.payload;\r\n\r\n        const existItem = state.cartItems.find((x)=> x.product ===item.product);\r\n        if(existItem) {\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.map((x)=> x.product === existItem.product ? item:x)\r\n            }\r\n        } else {\r\n            return {\r\n                ...state,\r\n                cartItems: [...state.cartItems, item],\r\n            };\r\n        }\r\n        case actionTypes.REMOVE_FROM_CART:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter((x)=> x.product !== action.payload)\r\n            }\r\n        default:\r\n            return state;\r\n}\r\n};\r\n"]},"metadata":{},"sourceType":"module"}